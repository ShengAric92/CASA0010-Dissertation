ew_shp <- st_read(here("main_code","spatial_regression", "MSOA_EngWal_Dec_2011_Generalised_ClippedEW_0", "Middle_Layer_Super_Output_Areas_December_2011_Generalised_Clipped_Boundaries_in_England_and_Wales.shp"))
england_shp <- ew_shp %>%
filter(substr(msoa11cd, 1, 1) == "E")
england_data <- england_shp %>%
left_join(msoa_data, by = c("msoa11cd" = "MSOA11CD"))
msoa_data <- read.csv("https://github.com/ShengAric92/CASA0010_dissertation/raw/main/main_code/data_convert/Varolsori.csv")
ew_shp <- st_read(here("main_code","spatial_regression", "MSOA_EngWal_Dec_2011_Generalised_ClippedEW_0", "Middle_Layer_Super_Output_Areas_December_2011_Generalised_Clipped_Boundaries_in_England_and_Wales.shp"))
england_shp <- ew_shp %>%
filter(substr(msoa11cd, 1, 1) == "E")
england_data <- england_shp %>%
left_join(msoa_data, by = c("msoa11cd" = "MSOA11CD"))
england_data_without_geo <- st_drop_geometry(england_data)
england_data_var <- england_data_without_geo[, 7:ncol(england_data_without_geo)]
# Scale the variables
england_data_var_sc <- as.data.frame(scale(england_data_var))
# cbind with shapefile
england_data_var_scall <- cbind(england_shp, england_data_var_sc)
#write.csv(england_data_var_sc, "/Users/shengaric/Desktop/scaledata.csv", row.names = FALSE)
# spatial matrix
queen_nb <- poly2nb(england_data_var_scall, queen = TRUE)
# allow zero policy
queen_weights <- nb2listw(queen_nb, style = "W", zero.policy = TRUE)
# OLS model
# OLS Full model
#ols_model <- lm(DMprev ~ Asian + Black + Mixed + White + Other + Female + Popudensity +   #                 Age17_29 + Age30_39 + Age40_49 + Age50_59 + Age60_69 + Age70_79 + Age80 +
#                Childrenemerg + Alcohol + HighSSB + COPDprev +
#                OBprev + IMDdecile, data = england_data_var_scall)
# OLS - white - Age17_29 to mitigate multi
#ols_model <- lm(DMprev ~ Asian + Black + Mixed + White + Other + Female + Popudensity +   #                 Age17_29 + Age30_39 + Age40_49 + Age50_59 + Age60_69 + Age70_79 + Age80 +
#                Childrenemerg + Alcohol + HighSSB + COPDprev +
#                OBprev + IMDdecile -
#                White - Age17_29, data = england_data_var_scall)
# VIF
# - Age70_79 (18.166660)
# - HighSSB (10.177017)
# - Age60_69 (7.144406)
# - Other (4.964254)
# - COPDprev (4.722491)
ols_vif <- lm(DMprev ~ Asian + Black + Mixed + White + Other + Female + Popudensity +                    Age17_29 + Age30_39 + Age40_49 + Age50_59 + Age60_69 + Age70_79 + Age80 +
Childrenemerg + Alcohol + HighSSB + COPDprev +
OBprev + IMDdecile -
White - Age17_29 -
Age70_79 - HighSSB - Age60_69 -
Other - COPDprev, data = england_data_var_scall)
summary(ols_vif)
AIC(ols_vif)
vif(ols_vif)
# Stepwise
# - Childrenemerg (p-value 0.67000)
# - Alcohol (p-value 0.548419)
# - Age30_39 (p-value 0.312085)
ols_step <- lm(DMprev ~ Asian + Black + Mixed + White + Other + Female + Popudensity +                    Age17_29 + Age30_39 + Age40_49 + Age50_59 + Age60_69 + Age70_79 + Age80 +
Childrenemerg + Alcohol + HighSSB + COPDprev +
OBprev + IMDdecile -
White - Age17_29 -
Age70_79 - HighSSB - Age60_69 -
Other - COPDprev -
Childrenemerg - Alcohol - Age30_39, data = england_data_var_scall)
summary(ols_step)
AIC(ols_step)
ols_res <- resid(ols_step)
moran.test(ols_res, queen_weights)
lag_model <- lagsarlm(DMprev ~ Asian + Black + Mixed + Female + Popudensity +                                    Age40_49 + Age50_59 + Age80 + OBprev + IMDdecile,
data = england_data_var_scall,
listw = queen_weights, zero.policy = TRUE)
summary(lag_model)
saveRDS(lag_model, file = "/Users/shengaric/Desktop/lag_model.rds")
#saveRDS(lag_model, file = "/Users/shengaric/Desktop/lag_model.rds")
save(lag_model, file = "/Users/shengaric/Desktop/lag_model.RData")
# Run the Spatial Lag Model
# And save the model data
#lag_model <- lagsarlm(DMprev ~ Asian + Black + Mixed + Female + Popudensity +             #                       Age40_49 + Age50_59 + Age80 + OBprev + IMDdecile,
#                      data = england_data_var_scall,
#                      listw = queen_weights, zero.policy = TRUE)
#saveRDS(lag_model, file = "/Users/shengaric/Desktop/lag_model.rds")
#save(lag_model, file = "/Users/shengaric/Desktop/lag_model.RData")
# Load the save Spatial Lag Model
lag_model_rds <-readRDS("https://github.com/ShengAric92/CASA0010_dissertation/raw/main/main_code/regression_model/lag_model.rds")
# Run the Spatial Lag Model
# And save the model data
#lag_model <- lagsarlm(DMprev ~ Asian + Black + Mixed + Female + Popudensity +             #                       Age40_49 + Age50_59 + Age80 + OBprev + IMDdecile,
#                      data = england_data_var_scall,
#                      listw = queen_weights, zero.policy = TRUE)
#saveRDS(lag_model, file = "/Users/shengaric/Desktop/lag_model.rds")
#save(lag_model, file = "/Users/shengaric/Desktop/lag_model.RData")
# Load the save Spatial Lag Model
lag_model_rds <-readRDS(here("main_code","regression_model", "lag_model.rds"))
# Run the Spatial Lag Model
# And save the model data
#lag_model <- lagsarlm(DMprev ~ Asian + Black + Mixed + Female + Popudensity +             #                       Age40_49 + Age50_59 + Age80 + OBprev + IMDdecile,
#                      data = england_data_var_scall,
#                      listw = queen_weights, zero.policy = TRUE)
#saveRDS(lag_model, file = "/Users/shengaric/Desktop/lag_model.rds")
#save(lag_model, file = "/Users/shengaric/Desktop/lag_model.RData")
# Load the save Spatial Lag Model
lag_model_rds <-readRDS(here("main_code","regression_model", "lag_model.rds"))
lag_model_rds
summary(lag_model_rds)
BIC(lag_model)
error_model <- errorsarlm(DMprev ~ Asian + Black + Mixed + Female + Popudensity +                                    Age40_49 + Age50_59 + Age80 + OBprev + IMDdecile,
data = england_data_var_scall,
listw = queen_weights, zero.policy = TRUE)
summary(error_model)
err_res <- resid(error_model)
moran.test(err_res, queen_weights)
lag_res <- resid(lag_model)
err_res <- resid(error_model)
moran.test(ols_res, queen_weights)
moran.test(lag_res, queen_weights)
moran.test(err_res, queen_weights)
saveRDS(error_model, file = "/Users/shengaric/Desktop/error_model.rds")
save(error_model, file = "/Users/shengaric/Desktop/error_model.RData")
# Run the Spatial Error Model
# And save the model data
#error_model <- errorsarlm(DMprev ~ Asian + Black + Mixed + Female + Popudensity +         #                           Age40_49 + Age50_59 + Age80 + OBprev + IMDdecile,
#                          data = england_data_var_scall,
#                          listw = queen_weights, zero.policy = TRUE)
#saveRDS(error_model, file = "/Users/shengaric/Desktop/error_model.rds")
#save(error_model, file = "/Users/shengaric/Desktop/error_model.RData")
error_model <- readRDS(here("main_code","regression_model", "error_model.rds"))
summary(error_model)
# Run the Spatial Lag Model
# And save the model data
durbin_model <- lagsarlm(DMprev ~ Asian + Black + Mixed + Female + Popudensity +                                    Age40_49 + Age50_59 + Age80 + OBprev + IMDdecile,
data = england_data_var_scall,
listw = queen_weights,
type = "mixed",
zero.policy = TRUE)
#saveRDS(durbin_model, file = "/Users/shengaric/Desktop/durbin_model.rds")
#save(durbin_model, file = "/Users/shengaric/Desktop/durbin_model.RData")
# Load the save Spatial Lag Model
#durbin_model_rds <- readRDS(here("main_code","regression_model", "durbin_model.rds"))
summary(durbin_model)
durbin_res <- resid(durbin_model)
moran.test(durbin_res, queen_weights)
saveRDS(durbin_model, file = "/Users/shengaric/Desktop/durbin_model.rds")
save(durbin_model, file = "/Users/shengaric/Desktop/durbin_model.RData")
summary(durbin_model)
# Run the Spatial Lag Model
# And save the model data
#durbin_model <- lagsarlm(DMprev ~ Asian + Black + Mixed + Female + Popudensity +          #                          Age40_49 + Age50_59 + Age80 + OBprev + IMDdecile,
#                         data = england_data_var_scall,
#                         listw = queen_weights,
#                         type = "mixed",
#                         zero.policy = TRUE)
#saveRDS(durbin_model, file = "/Users/shengaric/Desktop/durbin_model.rds")
#save(durbin_model, file = "/Users/shengaric/Desktop/durbin_model.RData")
# Load the save Spatial Lag Model
durbin_model_rds <- readRDS(here("main_code","regression_model", "durbin_model.rds"))
# Run the Spatial Lag Model
# And save the model data
#durbin_model <- lagsarlm(DMprev ~ Asian + Black + Mixed + Female + Popudensity +          #                          Age40_49 + Age50_59 + Age80 + OBprev + IMDdecile,
#                         data = england_data_var_scall,
#                         listw = queen_weights,
#                         type = "mixed",
#                         zero.policy = TRUE)
#saveRDS(durbin_model, file = "/Users/shengaric/Desktop/durbin_model.rds")
#save(durbin_model, file = "/Users/shengaric/Desktop/durbin_model.RData")
# Load the save Spatial Lag Model
durbin_model_rds <- readRDS(here("main_code","regression_model", "durbin_model.rds"))
# Run the Spatial Lag Model
# And save the model data
#durbin_model <- lagsarlm(DMprev ~ Asian + Black + Mixed + Female + Popudensity +          #                          Age40_49 + Age50_59 + Age80 + OBprev + IMDdecile,
#                         data = england_data_var_scall,
#                         listw = queen_weights,
#                         type = "mixed",
#                         zero.policy = TRUE)
#saveRDS(durbin_model, file = "/Users/shengaric/Desktop/durbin_model.rds")
#save(durbin_model, file = "/Users/shengaric/Desktop/durbin_model.RData")
# Load the save Spatial Lag Model
durbin_model_rds <- readRDS(here("main_code","regression_model", "durbin_model.rds"))
summary(durbin_model_rds)
lag_res <- residuals(lag_model)
err_res <- residuals(error_model)
moran.test(ols_res, queen_weights)
moran.test(lag_res, queen_weights)
moran.test(err_res, queen_weights)
moran.test(ols_res, queen_weights)
moran.test(lag_res, queen_weights)
moran.test(err_res, queen_weights)
durbin_res
residuals_df <- data.frame(
ols_resi = ols_res,
slm_resi = lag_res,
sem_resi = err_res,
sdm_resi = durbin_res
)
View(residuals_df)
# 提取空间误差模型的 λ
err_lambda <- error_model$lambda
# 将空间权重矩阵转换为稀疏矩阵格式
err_W <- as(queen_weights, "CsparseMatrix")
# 计算复合误差项 ε = (I - λW)^(-1) * u
err_I <- Diagonal(n = nrow(err_W))  # 创建单位矩阵
err_eps <- solve(I - err_lambda * err_W) %*% err_res
# 提取空间误差模型的 λ
err_lambda <- error_model$lambda
# 将空间权重矩阵转换为稀疏矩阵格式
err_W <- as(queen_weights, "CsparseMatrix")
# 计算复合误差项 ε = (I - λW)^(-1) * u
err_I <- Diagonal(n = nrow(err_W))  # 创建单位矩阵
err_eps <- solve(err_I - err_lambda * err_W) %*% err_res
View(err_eps)
View(err_eps)
err_eps@x
# 提取空间误差模型的 λ
err_lambda <- error_model$lambda
# 将空间权重矩阵转换为稀疏矩阵格式
err_W <- as(queen_weights, "CsparseMatrix")
# 计算复合误差项 ε = (I - λW)^(-1) * u
err_I <- Diagonal(n = nrow(err_W))  # 创建单位矩阵
err_eps <- solve(err_I - err_lambda * err_W) %*% err_res
err_eps <- err_eps@x
err_eps
err_eps[c(6751)]
err_eps[c(6791)]
err_eps[c(6790)]
err_eps[c(6789)]
# 制作各个模型的残差表
residuals_df <- data.frame(
ols_resi = ols_res,
slm_resi = lag_res,
sem_resi_u = err_res,
sem_resi_eps = err_eps
sdm_resi = durbin_res
# 提取空间误差模型的 λ
err_lambda <- error_model$lambda
# 将空间权重矩阵转换为稀疏矩阵格式
err_W <- as(queen_weights, "CsparseMatrix")
# 计算复合误差项 ε = (I - λW)^(-1) * u
err_I <- Diagonal(n = nrow(err_W))  # 创建单位矩阵
err_eps <- solve(err_I - err_lambda * err_W) %*% err_res
err_eps_vec <- err_eps@x
err_eps_df <- data.frame(err_eps = err_eps_vec)
View(err_eps_df)
# 制作各个模型的残差表
residuals_df <- data.frame(
ols_resi = ols_res,
slm_resi = lag_res,
sem_resi_u = err_res,
sem_resi_eps = err_eps_df,
sdm_resi = durbin_res
)
moran.test(err_eps_df, queen_weights)
moran.test(err_eps_vec, queen_weights)
mean(err_res^2)
mean(durbin_res^2)
mean(lag_res^2)
mean(ols_res^2)
error_model$fitted.values
error_model$y
mean((error_model$y - error_model$fitted.values)^2)
mean(ols_res^2)
mean(lag_res^2)
mean(err_res^2)
mean(durbin_res^2)
moran.test(ols_res, queen_weights)
moran.test(lag_res, queen_weights)
moran.test(err_res, queen_weights)
moran.test(err_eps_vec, queen_weights)
moran.test(durbin_res, queen_weights)
# 提取对数似然值
logLik_sem <- logLik(error_model)
logLik_sdm <- logLik(durbin_model)
# 计算似然比统计量
LR_stat <- 2 * (logLik_sdm - logLik_sem)
LR_stat <- as.numeric(LR_stat)  # 转换为数值类型
# 打印 LR 统计量
print(paste("Likelihood Ratio Statistic:", LR_stat))
# 提取对数似然值
logLik_sem <- logLik(error_model)
logLik_sdm <- logLik(durbin_model)
# 计算似然比统计量
LR_stat <- 2 * (logLik_sdm - logLik_sem)
LR_stat <- as.numeric(LR_stat)  # 转换为数值类型
# 打印 LR 统计量
print(paste("Likelihood Ratio Statistic:", LR_stat))
# 自由度等于两个模型的参数差异
df <- length(coef(sdm_model)) - length(coef(sem_model))
# 提取对数似然值
logLik_sem <- logLik(error_model)
logLik_sdm <- logLik(durbin_model)
# 计算似然比统计量
LR_stat <- 2 * (logLik_sdm - logLik_sem)
LR_stat <- as.numeric(LR_stat)  # 转换为数值类型
# 打印 LR 统计量
print(paste("Likelihood Ratio Statistic:", LR_stat))
# 自由度等于两个模型的参数差异
df <- length(coef(durbin_model)) - length(coef(error_model))
# 计算 p 值
p_value <- pchisq(LR_stat, df = df, lower.tail = FALSE)
# 打印 p 值
print(paste("p-value:", p_value))
# 提取对数似然值
logLik_slm <- logLik(lag_model)
logLik_sdm <- logLik(durbin_model)
# 计算似然比统计量
LR_stat <- 2 * (logLik_sdm - logLik_slm)
LR_stat <- as.numeric(LR_stat)  # 转换为数值类型
# 打印 LR 统计量
print(paste("Likelihood Ratio Statistic:", LR_stat))
# 自由度等于两个模型的参数差异
df <- length(coef(durbin_model)) - length(coef(lag_model))
# 计算 p 值
p_value <- pchisq(LR_stat, df = df, lower.tail = FALSE)
# 打印 p 值
print(paste("p-value:", p_value))
library('geosphere')
library('maps')
library('mapproj')
#library('maptools')
library('spatialreg')
library('car')
library('here')
library(sf)
library(spdep)
library(spatialreg)
library(dplyr)
library(ggplot2)
library('geosphere')
library('maps')
library('mapproj')
#library('maptools')
library('spatialreg')
library('car')
library('here')
library('geosphere')
library('maps')
library('mapproj')
#library('maptools')
library('spatialreg')
library('car')
library('here')
library(sf)
library(spdep)
library(spatialreg)
library(dplyr)
library(ggplot2)
library(sf)
library(spdep)
library(spatialreg)
library(dplyr)
library(ggplot2)
msoa_data <- read.csv("https://github.com/ShengAric92/CASA0010_dissertation/raw/main/main_code/data_convert/Varolsori.csv")
ew_shp <- st_read(here("main_code","spatial_regression", "MSOA_EngWal_Dec_2011_Generalised_ClippedEW_0", "Middle_Layer_Super_Output_Areas_December_2011_Generalised_Clipped_Boundaries_in_England_and_Wales.shp"))
england_shp <- ew_shp %>%
filter(substr(msoa11cd, 1, 1) == "E")
england_data <- england_shp %>%
left_join(msoa_data, by = c("msoa11cd" = "MSOA11CD"))
england_data_without_geo <- st_drop_geometry(england_data)
england_data_var <- england_data_without_geo[, 7:ncol(england_data_without_geo)]
# Scale the variables
england_data_var_sc <- as.data.frame(scale(england_data_var))
# cbind with shapefile
england_data_var_scall <- cbind(england_shp, england_data_var_sc)
#write.csv(england_data_var_sc, "/Users/shengaric/Desktop/scaledata.csv", row.names = FALSE)
# spatial matrix
queen_nb <- poly2nb(england_data_var_scall, queen = TRUE)
# allow zero policy
queen_weights <- nb2listw(queen_nb, style = "W", zero.policy = TRUE)
# OLS model
# OLS Full model
#ols_model <- lm(DMprev ~ Asian + Black + Mixed + White + Other + Female + Popudensity +   #                 Age17_29 + Age30_39 + Age40_49 + Age50_59 + Age60_69 + Age70_79 + Age80 +
#                Childrenemerg + Alcohol + HighSSB + COPDprev +
#                OBprev + IMDdecile, data = england_data_var_scall)
# OLS - white - Age17_29 to mitigate multi
#ols_model <- lm(DMprev ~ Asian + Black + Mixed + White + Other + Female + Popudensity +   #                 Age17_29 + Age30_39 + Age40_49 + Age50_59 + Age60_69 + Age70_79 + Age80 +
#                Childrenemerg + Alcohol + HighSSB + COPDprev +
#                OBprev + IMDdecile -
#                White - Age17_29, data = england_data_var_scall)
# VIF
# - Age70_79 (18.166660)
# - HighSSB (10.177017)
# - Age60_69 (7.144406)
# - Other (4.964254)
# - COPDprev (4.722491)
ols_vif <- lm(DMprev ~ Asian + Black + Mixed + White + Other + Female + Popudensity +                    Age17_29 + Age30_39 + Age40_49 + Age50_59 + Age60_69 + Age70_79 + Age80 +
Childrenemerg + Alcohol + HighSSB + COPDprev +
OBprev + IMDdecile -
White - Age17_29 -
Age70_79 - HighSSB - Age60_69 -
Other - COPDprev, data = england_data_var_scall)
summary(ols_vif)
AIC(ols_vif)
vif(ols_vif)
AIC(ols_vif)
BIC(ols_vif)
vif(ols_vif)
# Some stats for ols_vif
vif(ols_vif)
print("AIC:", AIC(ols_vif))
# Some stats for ols_vif
vif(ols_vif)
print("AIC:" AIC(ols_vif))
# Some stats for ols_vif
vif(ols_vif)
print(paste("AIC:", AIC(ols_vif))
BIC(ols_vif)
# Some stats for ols_vif
vif(ols_vif)
print(paste("AIC:", AIC(ols_vif)))
BIC(ols_vif)
# Some stats for ols_vif
print(vif(ols_vif))
print(paste("AIC:", AIC(ols_vif)))
print(paste("AIC:", AIC(ols_vif)))
# Some stats for ols_vif
print(vif(ols_vif))
print(paste("AIC:", AIC(ols_vif)))
print(paste("BIC:", BIC(ols_vif)))
# Some stats for ols_vif
vif(ols_vif)
print(paste("AIC:", AIC(ols_vif)))
print(paste("BIC:", BIC(ols_vif)))
# Some stats for ols_vif
vif(ols_vif)
print(paste("Log-Likelihood:", ligLik(ols_vif)))
# Some stats for ols_vif
vif(ols_vif)
print(paste("Log-Likelihood:", logLik(ols_vif)))
print(paste("AIC:", AIC(ols_vif)))
print(paste("BIC:", BIC(ols_vif)))
library(lmtest)
library(lmtest)
library(lmtest)
library(tseries)
library(lmtest)
library(tseries)
dwtest(ols_vif)
# DW
dwtest(ols_vif)
# JB
jarque.bera.test(residuals(ols_vif))
#
#
ols_vif_res <- residuals(ols_vif)
# Some stats for ols_vif
vif(ols_vif)
print(paste("Log-Likelihood:", logLik(ols_vif)))
print(paste("AIC:", AIC(ols_vif)))
print(paste("BIC:", BIC(ols_vif)))
# DW
dwtest(ols_vif)
# JB
jarque.bera.test(ols_vif_res)
#
#
sqrt(mean(ols_vif_res^2))
mean(ols_vif_res^2)
mean((ols_vif$y - ols_vif$fitted.values)^2)
mean((ols_vif$fitted.values - ols_vif$y)^2)
ols_vif$DMprev
mean((ols_vif$fitted.values - england_data_var_scall$DMprev)^2)
sqrt(mean((ols_vif$fitted.values - england_data_var_scall$DMprev)^2))
summary(ols_vif)
# Residuals
ols_vif_res <- residuals(ols_vif)
# Some stats for ols_vif
vif(ols_vif)
print(paste("Log-Likelihood:", logLik(ols_vif)))
print(paste("AIC:", AIC(ols_vif)))
print(paste("BIC:", BIC(ols_vif)))
# MSE & RMSE
print(paste("MSE:", mean(ols_vif_res^2)))
print(paste("RMSE:", sqrt(mean(ols_vif_res^2))))
# Linear relationship exists: Rainbow test
raintest(ols_vif)
# Independent errors: Durbin-Watson test
dwtest(ols_vif)
# Normally distributed errors: Jarque-Bera test
jarque.bera.test(ols_vif_res)
# Equal variance (Homoscedasticity): Goldfeld-Quandt test
# Independent errors: Durbin-Watson test
dwtest(ols_vif)
# Normally distributed errors: Jarque-Bera test
jarque.bera.test(ols_vif_res)
# Equal variance (Homoscedasticity): Goldfeld-Quandt test
gqtest(ols_vif)
# Independent errors: Durbin-Watson test
dwtest(ols_vif)
# Normally distributed errors: Jarque-Bera test
jarque.bera.test(ols_vif_res)
# Equal variance (Homoscedasticity): Goldfeld-Quandt test
gqtest(ols_vif)
# Stepwise
# - Childrenemerg (p-value 0.67000)
# - Alcohol (p-value 0.548419)
# - Age30_39 (p-value 0.312085)
ols_step <- lm(DMprev ~ Asian + Black + Mixed + White + Other + Female + Popudensity +                    Age17_29 + Age30_39 + Age40_49 + Age50_59 + Age60_69 + Age70_79 + Age80 +
Childrenemerg + Alcohol + HighSSB + COPDprev +
OBprev + IMDdecile -
White - Age17_29 -
Age70_79 - HighSSB - Age60_69 -
Other - COPDprev -
Childrenemerg - Alcohol - Age30_39, data = england_data_var_scall)
summary(ols_step)
# Residuals
ols_step_res <- residuals(ols_step)
# Some stats for ols_vif
vif(ols_step)
print(paste("Log-Likelihood:", logLik(ols_step)))
print(paste("AIC:", AIC(ols_step)))
print(paste("BIC:", BIC(ols_step)))
# MSE & RMSE
print(paste("MSE:", mean(ols_step_res^2)))
print(paste("RMSE:", sqrt(mean(ols_step_res^2))))
# Independent errors: Durbin-Watson test
dwtest(ols_step)
# Normally distributed errors: Jarque-Bera test
jarque.bera.test(ols_step_res)
# Equal variance (Homoscedasticity): Goldfeld-Quandt test
gqtest(ols_step)
